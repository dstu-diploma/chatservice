from .dto import MessageDto, RequestDto
from typing import Protocol


class IRequestController(Protocol):
    async def get_all_requests(self) -> list[RequestDto]: ...
    async def get_requests_by_user(self, user_id: int) -> list[RequestDto]: ...
    async def get_request(self, request_id: int) -> RequestDto: ...
    async def get_request_history(
        self, request_id: int
    ) -> list[MessageDto]: ...
    async def is_request_open(self, request_id: int) -> bool: ...
    async def close_request(
        self, request_id: int, closed_by_user_id: int
    ) -> RequestDto: ...
    async def create(
        self, author_user_id: int, subject: str, first_message: str
    ) -> RequestDto: ...
    async def send_message(
        self, request_id: int, user_id: int, message: str
    ) -> MessageDto: ...
